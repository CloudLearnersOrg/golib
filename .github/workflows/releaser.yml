name: Verify & Release
on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'

env:
  GOPROXY: https://proxy.golang.org

permissions:
  # Required for creating releases
  contents: write
  # Required for publishing packages
  packages: read
  # Required for commit status updates
  statuses: read
  # Required for PR comments
  pull-requests: read
  # Required for creating issues
  issues: read
  # Required for checking identity and access
  id-token: write

jobs:
  verify_backend_quality:
    name: Verify Backend Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7


  verify_backend_security:
    name: Verify Backend Code Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run:  |
          go mod tidy
          gosec ./...

  unit_tests_coverage:
    name: Unit Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Run Unit Tests
        run:  |
          go mod tidy
          go test ./... -cover

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [verify_backend_quality, verify_backend_security, unit_tests_coverage]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}